2021-10-05T10:53:06.1620350+02:00  [INF] Now listening on: "https://localhost:5001" (d826f4b8)
2021-10-05T10:53:06.1678220+02:00  [INF] Now listening on: "http://localhost:5000" (d826f4b8)
2021-10-05T10:53:06.1701460+02:00  [INF] Application started. Press Ctrl+C to shut down. (dcaefe54)
2021-10-05T10:53:06.1720200+02:00  [INF] Hosting environment: "Development" (c3307c92)
2021-10-05T10:53:06.1738940+02:00  [INF] Content root path: "/Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1" (b5d60022)
2021-10-05T11:06:55.1049630+02:00 0HMC7RM65NC2H:00000002 [INF] NewOrder:  (c17c1c90)
2021-10-05T11:06:55.1176560+02:00 0HMC7RM65NC2H:00000002 [INF] {"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Email":"andor.davoti@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany"} (e67c79ff)
2021-10-05T11:06:55.2755220+02:00 0HMC7RM65NC2H:00000002 [INF] ExistingCustomer:  (930e6f81)
2021-10-05T11:06:55.2778650+02:00 0HMC7RM65NC2H:00000002 [INF] null (3adb3357)
2021-10-05T11:06:55.2803480+02:00 0HMC7RM65NC2H:00000002 [INF] Customer:  (55dae2e5)
2021-10-05T11:06:55.2853370+02:00 0HMC7RM65NC2H:00000002 [INF] {"Id":0,"Email":"andor.davoti@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","Orders":null} (fa7f0e8b)
2021-10-05T11:06:55.2959000+02:00 0HMC7RM65NC2H:00000002 [INF] Route:  (dc29f189)
2021-10-05T11:06:55.2996620+02:00 0HMC7RM65NC2H:00000002 [INF] {"Id":3,"FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany","PriceChildren":800,"PriceAdults":1600,"PriceVehicle":500} (a824c8d7)
2021-10-05T11:06:55.3024290+02:00 0HMC7RM65NC2H:00000002 [INF] Order:  (7b22dfb8)
2021-10-05T11:06:55.3088410+02:00 0HMC7RM65NC2H:00000002 [INF] {"Id":0,"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Customer":{"Id":0,"Email":"andor.davoti@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","Orders":null},"Route":{"Id":3,"FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany","PriceChildren":800,"PriceAdults":1600,"PriceVehicle":500}} (dcf12627)
2021-10-05T11:06:56.5823500+02:00 0HMC7RM65NC2H:00000003 [INF] NewOrder:  (c17c1c90)
2021-10-05T11:06:56.5847010+02:00 0HMC7RM65NC2H:00000003 [INF] {"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Email":"andor.davoti@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany"} (e67c79ff)
2021-10-05T11:06:56.5902360+02:00 0HMC7RM65NC2H:00000003 [INF] ExistingCustomer:  (930e6f81)
2021-10-05T11:06:56.7522760+02:00 0HMC7RM65NC2H:00000003 [INF] Something went wrong saving the order! Err: Newtonsoft.Json.JsonSerializationException: Self referencing loop detected for property 'Customer' with type 'Castle.Proxies.CustomerProxy'. Path 'Orders[0]'.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(JsonWriter writer, Object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(JsonWriter writer, Object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonConvert.SerializeObjectInternal(Object value, Type type, JsonSerializer jsonSerializer)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value)
   at Cruisaholic.DAL.OrderRepository.NewOrder(CustomerOrder newOrder) in /Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1/DAL/OrderRepository.cs:line 43
   at Cruisaholic.Controllers.OrderController.NewOrder(CustomerOrder newOrder) in /Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1/Controllers/OrderController.cs:line 30 (21e57ff0)
2021-10-05T11:18:47.3204770+02:00  [INF] Now listening on: "https://localhost:5001" (d826f4b8)
2021-10-05T11:18:47.3278220+02:00  [INF] Now listening on: "http://localhost:5000" (d826f4b8)
2021-10-05T11:18:47.3307130+02:00  [INF] Application started. Press Ctrl+C to shut down. (dcaefe54)
2021-10-05T11:18:47.3331250+02:00  [INF] Hosting environment: "Development" (c3307c92)
2021-10-05T11:18:47.3541360+02:00  [INF] Content root path: "/Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1" (b5d60022)
2021-10-05T11:32:12.2409360+02:00 0HMC7S4HF0I7J:00000002 [INF] NewOrder:  (c17c1c90)
2021-10-05T11:32:12.2504710+02:00 0HMC7S4HF0I7J:00000002 [INF] {"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Email":"andor.davoti@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany"} (e67c79ff)
2021-10-05T11:32:12.4292700+02:00 0HMC7S4HF0I7J:00000002 [INF] ExistingCustomer:  (930e6f81)
2021-10-05T11:32:12.4314410+02:00 0HMC7S4HF0I7J:00000002 [INF] null (3adb3357)
2021-10-05T11:32:12.4340180+02:00 0HMC7S4HF0I7J:00000002 [INF] Customer:  (55dae2e5)
2021-10-05T11:32:12.4390290+02:00 0HMC7S4HF0I7J:00000002 [INF] {"Id":0,"Email":"andor.davoti@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","Orders":null} (fa7f0e8b)
2021-10-05T11:32:12.4498120+02:00 0HMC7S4HF0I7J:00000002 [INF] Route:  (dc29f189)
2021-10-05T11:32:12.4538240+02:00 0HMC7S4HF0I7J:00000002 [INF] {"Id":3,"FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany","PriceChildren":800,"PriceAdults":1600,"PriceVehicle":500} (a824c8d7)
2021-10-05T11:32:12.4565170+02:00 0HMC7S4HF0I7J:00000002 [INF] Order:  (7b22dfb8)
2021-10-05T11:32:12.4627620+02:00 0HMC7S4HF0I7J:00000002 [INF] {"Id":0,"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Customer":{"Id":0,"Email":"andor.davoti@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","Orders":null},"Route":{"Id":3,"FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany","PriceChildren":800,"PriceAdults":1600,"PriceVehicle":500}} (dcf12627)
2021-10-05T11:32:14.1421810+02:00 0HMC7S4HF0I7J:00000003 [INF] NewOrder:  (c17c1c90)
2021-10-05T11:32:14.1449530+02:00 0HMC7S4HF0I7J:00000003 [INF] {"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Email":"andor.davoti@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany"} (e67c79ff)
2021-10-05T11:32:14.1545280+02:00 0HMC7S4HF0I7J:00000003 [INF] ExistingCustomer:  (930e6f81)
2021-10-05T11:32:14.2975570+02:00 0HMC7S4HF0I7J:00000003 [INF] Something went wrong saving the order! Err: Newtonsoft.Json.JsonSerializationException: Self referencing loop detected for property 'Customer' with type 'Castle.Proxies.CustomerProxy'. Path 'Orders[0]'.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(JsonWriter writer, Object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(JsonWriter writer, Object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonConvert.SerializeObjectInternal(Object value, Type type, JsonSerializer jsonSerializer)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value)
   at Cruisaholic.DAL.OrderRepository.NewOrder(CustomerOrder newOrder) in /Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1/DAL/OrderRepository.cs:line 43
   at Cruisaholic.Controllers.OrderController.NewOrder(CustomerOrder newOrder) in /Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1/Controllers/OrderController.cs:line 30 (21e57ff0)
2021-10-05T11:41:30.4223660+02:00 0HMC7S4HF0I7N:00000009 [INF] NewOrder:  (c17c1c90)
2021-10-05T11:41:30.4246320+02:00 0HMC7S4HF0I7N:00000009 [INF] {"NumberOfAdults":1,"NumberOfChildren":0,"NumberOfVehicles":0,"IsRoundtrip":true,"DepartureDate":"28/10/2021","ArrivalDate":"11/11/2021","CardNumber":1234567891234567,"CardholderName":"Andor Davoti","CVC":123,"Expiry":"01/01","Email":"test@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","FromDestination":"Strømstad, Sweden","ToDestination":"Oslo, Norway"} (de0a7173)
2021-10-05T11:41:30.4720480+02:00 0HMC7S4HF0I7N:00000009 [INF] ExistingCustomer:  (930e6f81)
2021-10-05T11:41:30.4753070+02:00 0HMC7S4HF0I7N:00000009 [INF] null (3adb3357)
2021-10-05T11:41:30.4780140+02:00 0HMC7S4HF0I7N:00000009 [INF] Customer:  (55dae2e5)
2021-10-05T11:41:30.4807590+02:00 0HMC7S4HF0I7N:00000009 [INF] {"Id":0,"Email":"test@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","Orders":null} (f8af5543)
2021-10-05T11:41:30.4838850+02:00 0HMC7S4HF0I7N:00000009 [INF] Route:  (dc29f189)
2021-10-05T11:41:30.4859390+02:00 0HMC7S4HF0I7N:00000009 [INF] {"Id":4,"FromDestination":"Strømstad, Sweden","ToDestination":"Oslo, Norway","PriceChildren":400,"PriceAdults":800,"PriceVehicle":500} (d8ef1d4a)
2021-10-05T11:41:30.4879240+02:00 0HMC7S4HF0I7N:00000009 [INF] Order:  (7b22dfb8)
2021-10-05T11:41:30.4900250+02:00 0HMC7S4HF0I7N:00000009 [INF] {"Id":0,"NumberOfAdults":1,"NumberOfChildren":0,"NumberOfVehicles":0,"IsRoundtrip":true,"DepartureDate":"28/10/2021","ArrivalDate":"11/11/2021","CardNumber":1234567891234567,"CardholderName":"Andor Davoti","CVC":123,"Expiry":"01/01","Customer":{"Id":0,"Email":"test@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","Orders":null},"Route":{"Id":4,"FromDestination":"Strømstad, Sweden","ToDestination":"Oslo, Norway","PriceChildren":400,"PriceAdults":800,"PriceVehicle":500}} (0e888b7b)
2021-10-05T11:41:48.2938950+02:00 0HMC7S4HF0I7J:00000004 [INF] NewOrder:  (c17c1c90)
2021-10-05T11:41:48.2965200+02:00 0HMC7S4HF0I7J:00000004 [INF] {"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Email":"andor.davoti@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany"} (e67c79ff)
2021-10-05T11:41:48.3020520+02:00 0HMC7S4HF0I7J:00000004 [INF] ExistingCustomer:  (930e6f81)
2021-10-05T11:41:48.3747410+02:00 0HMC7S4HF0I7J:00000004 [INF] Something went wrong saving the order! Err: Newtonsoft.Json.JsonSerializationException: Self referencing loop detected for property 'Customer' with type 'Castle.Proxies.CustomerProxy'. Path 'Orders[0]'.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(JsonWriter writer, Object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(JsonWriter writer, Object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonConvert.SerializeObjectInternal(Object value, Type type, JsonSerializer jsonSerializer)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value)
   at Cruisaholic.DAL.OrderRepository.NewOrder(CustomerOrder newOrder) in /Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1/DAL/OrderRepository.cs:line 43
   at Cruisaholic.Controllers.OrderController.NewOrder(CustomerOrder newOrder) in /Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1/Controllers/OrderController.cs:line 30 (21e57ff0)
2021-10-05T11:43:26.6011630+02:00 0HMC7S4HF0I7N:0000000F [INF] NewOrder:  (c17c1c90)
2021-10-05T11:43:26.6064180+02:00 0HMC7S4HF0I7N:0000000F [INF] {"NumberOfAdults":1,"NumberOfChildren":0,"NumberOfVehicles":0,"IsRoundtrip":true,"DepartureDate":"05/10/2021","ArrivalDate":"05/10/2021","CardNumber":1234567891234444,"CardholderName":"Andor Davoti","CVC":123,"Expiry":"01/01","Email":"hei@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany"} (6f45e343)
2021-10-05T11:43:26.6438320+02:00 0HMC7S4HF0I7N:0000000F [INF] ExistingCustomer:  (930e6f81)
2021-10-05T11:43:26.6458920+02:00 0HMC7S4HF0I7N:0000000F [INF] null (3adb3357)
2021-10-05T11:43:26.6479440+02:00 0HMC7S4HF0I7N:0000000F [INF] Customer:  (55dae2e5)
2021-10-05T11:43:26.6500300+02:00 0HMC7S4HF0I7N:0000000F [INF] {"Id":0,"Email":"hei@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","Orders":null} (a725251f)
2021-10-05T11:43:26.6532850+02:00 0HMC7S4HF0I7N:0000000F [INF] Route:  (dc29f189)
2021-10-05T11:43:26.6554410+02:00 0HMC7S4HF0I7N:0000000F [INF] {"Id":3,"FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany","PriceChildren":800,"PriceAdults":1600,"PriceVehicle":500} (a824c8d7)
2021-10-05T11:43:26.6576900+02:00 0HMC7S4HF0I7N:0000000F [INF] Order:  (7b22dfb8)
2021-10-05T11:43:26.6598970+02:00 0HMC7S4HF0I7N:0000000F [INF] {"Id":0,"NumberOfAdults":1,"NumberOfChildren":0,"NumberOfVehicles":0,"IsRoundtrip":true,"DepartureDate":"05/10/2021","ArrivalDate":"05/10/2021","CardNumber":1234567891234444,"CardholderName":"Andor Davoti","CVC":123,"Expiry":"01/01","Customer":{"Id":0,"Email":"hei@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","Orders":null},"Route":{"Id":3,"FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany","PriceChildren":800,"PriceAdults":1600,"PriceVehicle":500}} (3f091721)
2021-10-05T11:55:32.2373670+02:00 0HMC7S4HF0I7J:00000006 [INF] NewOrder:  (c17c1c90)
2021-10-05T11:55:32.2416480+02:00 0HMC7S4HF0I7J:00000006 [INF] {"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Email":"123@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany"} (a261feb2)
2021-10-05T11:55:32.2728700+02:00 0HMC7S4HF0I7J:00000006 [INF] ExistingCustomer:  (930e6f81)
2021-10-05T11:55:32.2750210+02:00 0HMC7S4HF0I7J:00000006 [INF] null (3adb3357)
2021-10-05T11:55:32.2771400+02:00 0HMC7S4HF0I7J:00000006 [INF] Customer:  (55dae2e5)
2021-10-05T11:55:32.2792790+02:00 0HMC7S4HF0I7J:00000006 [INF] {"Id":0,"Email":"123@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","Orders":null} (70bb9da4)
2021-10-05T11:55:32.2822560+02:00 0HMC7S4HF0I7J:00000006 [INF] Route:  (dc29f189)
2021-10-05T11:55:32.2843090+02:00 0HMC7S4HF0I7J:00000006 [INF] {"Id":3,"FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany","PriceChildren":800,"PriceAdults":1600,"PriceVehicle":500} (a824c8d7)
2021-10-05T11:55:32.2863960+02:00 0HMC7S4HF0I7J:00000006 [INF] Order:  (7b22dfb8)
2021-10-05T11:55:32.3113310+02:00 0HMC7S4HF0I7J:00000006 [INF] {"Id":0,"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Customer":{"Id":0,"Email":"123@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","Orders":null},"Route":{"Id":3,"FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany","PriceChildren":800,"PriceAdults":1600,"PriceVehicle":500}} (3cf5921e)
2021-10-05T12:14:59.4243860+02:00 0HMC7S4HF0I7J:00000007 [INF] NewOrder:  (c17c1c90)
2021-10-05T12:14:59.4338360+02:00 0HMC7S4HF0I7J:00000007 [INF] {"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Email":"123@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany"} (a261feb2)
2021-10-05T12:14:59.4446490+02:00 0HMC7S4HF0I7J:00000007 [INF] ExistingCustomer:  (930e6f81)
2021-10-05T12:14:59.5173910+02:00 0HMC7S4HF0I7J:00000007 [INF] Something went wrong saving the order! Err: Newtonsoft.Json.JsonSerializationException: Self referencing loop detected for property 'Customer' with type 'Castle.Proxies.CustomerProxy'. Path 'Orders[0]'.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(JsonWriter writer, Object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(JsonWriter writer, Object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonConvert.SerializeObjectInternal(Object value, Type type, JsonSerializer jsonSerializer)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value)
   at Cruisaholic.DAL.OrderRepository.NewOrder(CustomerOrder newOrder) in /Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1/DAL/OrderRepository.cs:line 43
   at Cruisaholic.Controllers.OrderController.NewOrder(CustomerOrder newOrder) in /Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1/Controllers/OrderController.cs:line 30 (21e57ff0)
2021-10-05T12:16:22.8583670+02:00 0HMC7S4HF0I7J:00000009 [INF] Customer with email: test1@gmail.com, was not found (e370b9ff)
2021-10-05T13:54:05.6737810+02:00 0HMC7S4HF0I7J:0000000A [INF] Customer with email: test1@gmail.com, was not found (e370b9ff)
2021-10-05T14:00:14.7630780+02:00  [INF] Now listening on: "https://localhost:5001" (d826f4b8)
2021-10-05T14:00:14.7698730+02:00  [INF] Now listening on: "http://localhost:5000" (d826f4b8)
2021-10-05T14:00:14.7725320+02:00  [INF] Application started. Press Ctrl+C to shut down. (dcaefe54)
2021-10-05T14:00:14.7747010+02:00  [INF] Hosting environment: "Development" (c3307c92)
2021-10-05T14:00:14.7768770+02:00  [INF] Content root path: "/Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1" (b5d60022)
2021-10-05T14:00:33.9566630+02:00 0HMC7UUOHMI7Q:00000002 [INF] NewOrder:  (c17c1c90)
2021-10-05T14:00:33.9880130+02:00 0HMC7UUOHMI7Q:00000002 [INF] {"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Email":"123@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany"} (a261feb2)
2021-10-05T14:00:34.3733780+02:00 0HMC7UUOHMI7Q:00000002 [INF] ExistingCustomer:  (930e6f81)
2021-10-05T14:00:34.3755620+02:00 0HMC7UUOHMI7Q:00000002 [INF] null (3adb3357)
2021-10-05T14:00:34.3780400+02:00 0HMC7UUOHMI7Q:00000002 [INF] Customer:  (55dae2e5)
2021-10-05T14:00:34.3867600+02:00 0HMC7UUOHMI7Q:00000002 [INF] {"Id":0,"Email":"123@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","Orders":null} (70bb9da4)
2021-10-05T14:00:34.4049640+02:00 0HMC7UUOHMI7Q:00000002 [INF] Route:  (dc29f189)
2021-10-05T14:00:34.4113070+02:00 0HMC7UUOHMI7Q:00000002 [INF] {"Id":3,"FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany","PriceChildren":800,"PriceAdults":1600,"PriceVehicle":500} (a824c8d7)
2021-10-05T14:00:34.4143580+02:00 0HMC7UUOHMI7Q:00000002 [INF] Order:  (7b22dfb8)
2021-10-05T14:00:34.4226130+02:00 0HMC7UUOHMI7Q:00000002 [INF] {"Id":0,"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Customer":{"Id":0,"Email":"123@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","Orders":null},"Route":{"Id":3,"FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany","PriceChildren":800,"PriceAdults":1600,"PriceVehicle":500}} (3cf5921e)
2021-10-05T14:00:37.7832100+02:00 0HMC7UUOHMI7Q:00000003 [INF] NewOrder:  (c17c1c90)
2021-10-05T14:00:37.7854810+02:00 0HMC7UUOHMI7Q:00000003 [INF] {"NumberOfAdults":1,"NumberOfChildren":2,"NumberOfVehicles":2,"IsRoundtrip":true,"DepartureDate":"03/10/2021","ArrivalDate":"31/11/2021","CardNumber":5573856002808328,"CardholderName":"Andor Davoti","CVC":336,"Expiry":"04/24","Email":"123@gmail.com","FirstName":"Andor","LastName":"Davoti","PhoneNumber":"+4746788587","FromDestination":"Oslo, Norway","ToDestination":"Kiel, Germany"} (a261feb2)
2021-10-05T14:00:37.7923150+02:00 0HMC7UUOHMI7Q:00000003 [INF] ExistingCustomer:  (930e6f81)
2021-10-05T14:00:37.9788620+02:00 0HMC7UUOHMI7Q:00000003 [INF] Something went wrong saving the order! Err: Newtonsoft.Json.JsonSerializationException: Self referencing loop detected for property 'Customer' with type 'Castle.Proxies.CustomerProxy'. Path 'Orders[0]'.
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CheckForCircularReference(JsonWriter writer, Object value, JsonProperty property, JsonContract contract, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.CalculatePropertyValues(JsonWriter writer, Object value, JsonContainerContract contract, JsonProperty member, JsonProperty property, JsonContract& memberContract, Object& memberValue)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeList(JsonWriter writer, IEnumerable values, JsonArrayContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeObject(JsonWriter writer, Object value, JsonObjectContract contract, JsonProperty member, JsonContainerContract collectionContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.SerializeValue(JsonWriter writer, Object value, JsonContract valueContract, JsonProperty member, JsonContainerContract containerContract, JsonProperty containerProperty)
   at Newtonsoft.Json.Serialization.JsonSerializerInternalWriter.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.SerializeInternal(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonSerializer.Serialize(JsonWriter jsonWriter, Object value, Type objectType)
   at Newtonsoft.Json.JsonConvert.SerializeObjectInternal(Object value, Type type, JsonSerializer jsonSerializer)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value, Type type, JsonSerializerSettings settings)
   at Newtonsoft.Json.JsonConvert.SerializeObject(Object value)
   at Cruisaholic.DAL.OrderRepository.NewOrder(CustomerOrder newOrder) in /Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1/DAL/OrderRepository.cs:line 43
   at Cruisaholic.Controllers.OrderController.NewOrder(CustomerOrder newOrder) in /Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1/Controllers/OrderController.cs:line 30 (f3ca3731)
2021-10-05T14:17:57.1749890+02:00  [INF] Now listening on: "https://localhost:5001" (d826f4b8)
2021-10-05T14:17:57.1808380+02:00  [INF] Now listening on: "http://localhost:5000" (d826f4b8)
2021-10-05T14:17:57.1833960+02:00  [INF] Application started. Press Ctrl+C to shut down. (dcaefe54)
2021-10-05T14:17:57.1852930+02:00  [INF] Hosting environment: "Development" (c3307c92)
2021-10-05T14:17:57.1873990+02:00  [INF] Content root path: "/Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1" (b5d60022)
2021-10-05T14:18:08.9371140+02:00 0HMC7V8L614IH:00000005 [INF] Customer with email: test@gmail.com, was not found (952f21dc)
2021-10-05T17:42:14.2937710+02:00 0HMC7V8L614KL:00000003 [INF] Customer with email: test@gmail.com, was not found (952f21dc)
2021-10-05T17:42:47.1959160+02:00 0HMC7V8L614KL:0000000A [INF] Customer with email: test@gmail.com, was not found (952f21dc)
2021-10-05T17:42:48.8427990+02:00 0HMC7V8L614KM:00000006 [INF] Customer with email: test@gmail.com, was not found (952f21dc)
2021-10-05T17:42:49.8956940+02:00 0HMC7V8L614KN:00000007 [INF] Customer with email: test@gmail.com, was not found (952f21dc)
2021-10-05T17:43:17.6695660+02:00 0HMC7V8L614KM:0000000E [INF] Customer with email: test@gmail.com, was not found (952f21dc)
2021-10-05T17:46:10.6788940+02:00  [INF] Now listening on: "https://localhost:5001" (d826f4b8)
2021-10-05T17:46:10.6858560+02:00  [INF] Now listening on: "http://localhost:5000" (d826f4b8)
2021-10-05T17:46:10.6907500+02:00  [INF] Application started. Press Ctrl+C to shut down. (dcaefe54)
2021-10-05T17:46:10.6971580+02:00  [INF] Hosting environment: "Development" (c3307c92)
2021-10-05T17:46:10.7057770+02:00  [INF] Content root path: "/Users/andordavoti/git/university/ITPE3200/Prosjekt1/Prosjekt1" (b5d60022)
